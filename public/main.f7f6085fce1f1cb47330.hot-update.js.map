{"version":3,"file":"main.f7f6085fce1f1cb47330.hot-update.js","mappings":"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","sources":["webpack://lemonade-zk/./src/game/game.js","webpack://lemonade-zk/webpack/runtime/getFullHash"],"sourcesContent":["class LemonadeStand {\n    constructor() {\n        this.assets = 2.00; // Starting money\n        this.day = 1;\n        this.weather = {\n            SUNNY: 'SUNNY',\n            CLOUDY: 'CLOUDY',\n            HOT_AND_DRY: 'HOT_AND_DRY'\n        };\n        this.currentWeather = this.weather.SUNNY;\n        this.weatherProbabilities = {\n            [this.weather.SUNNY]: 0.6,\n            [this.weather.CLOUDY]: 0.2,\n            [this.weather.HOT_AND_DRY]: 0.2\n        };\n        this.costPerGlass = 0.02; // $0.02 per glass to make\n        this.costPerSign = 0.15; // $0.15 per advertising sign\n        this.gameState = {\n            SETUP: 'SETUP',\n            RUNNING: 'RUNNING',\n            RESULTS: 'RESULTS',\n            GAME_OVER: 'GAME_OVER',\n            WIN: 'WIN',\n            WIN_CONFIRMED: 'WIN_CONFIRMED'  // New state for confirmed win\n        };\n        this.currentState = this.gameState.SETUP;\n        this.displayElement = document.getElementById('game-display');\n        this.inputElement = document.getElementById('player-input');\n        \n        // Game statistics\n        this.totalProfit = 0;\n        this.bestDayProfit = 0;\n        this.totalGlassesSold = 0;\n        this.bankruptcyDays = 0;\n        this.glasses = 0;\n        this.signs = 0;\n        this.price = 0;\n        \n        // Remove global event listener before adding a new one\n        document.removeEventListener('keypress', this.handleGlobalKeypress);\n        \n        this.setupEventListeners();\n        this.startDay();\n    }\n\n    setupEventListeners() {\n        // Store the bound function so we can remove it later\n        this.handleGlobalKeypress = (e) => {\n            if (e.key === 'Enter') {\n                if (this.currentState === this.gameState.WIN) {\n                    // First Enter press just changes state\n                    this.currentState = this.gameState.WIN_CONFIRMED;\n                    this.displayElement.textContent += '\\n\\nPress Enter again to start a new game...';\n                } else if (this.currentState === this.gameState.WIN_CONFIRMED) {\n                    // Second Enter press starts new game\n                    const newGame = new LemonadeStand();\n                    window.game = newGame;\n                    newGame.currentState = newGame.gameState.SETUP;\n                    newGame.startDay();\n                } else if (this.currentState === this.gameState.GAME_OVER) {\n                    if (this.bankruptcyDays >= 2) {\n                        // Start a new game after double bankruptcy\n                        const newGame = new LemonadeStand();\n                        window.game = newGame;\n                        newGame.currentState = newGame.gameState.SETUP;\n                        newGame.startDay();\n                    } else {\n                        console.log('Starting next day');\n                        this.day++;\n                        this.currentState = this.gameState.SETUP;\n                        this.startDay();\n                    }\n                }\n            }\n        };\n\n        // Add the global keypress listener\n        document.addEventListener('keypress', this.handleGlobalKeypress);\n\n        // Clear any existing submitInput handler\n        if (window.submitInput) {\n            delete window.submitInput;\n        }\n\n        // Set up the new submitInput handler\n        window.submitInput = () => {\n            console.log('Submit clicked, current state:', this.currentState);\n            const inputValue = this.inputElement.value.trim();\n            console.log('Input value:', inputValue);\n            \n            // Skip processing if input is empty\n            if (!inputValue) {\n                console.log('Empty input, skipping');\n                this.inputElement.focus();\n                return;\n            }\n            \n            const input = parseInt(inputValue);\n            console.log('Parsed input:', input);\n            \n            if (isNaN(input) || input < 0) {\n                alert('Please enter a valid positive number');\n                this.inputElement.value = '';\n                this.inputElement.focus();\n                return;\n            }\n            \n            // Clear input and store value before state transition\n            this.inputElement.value = '';\n            \n            switch (this.currentState) {\n                case this.gameState.SETUP:\n                    if (input * this.costPerGlass > this.assets) {\n                        alert('You cannot afford that many glasses!');\n                        this.inputElement.focus();\n                        return;\n                    }\n                    this.glasses = input;\n                    this.currentState = this.gameState.RUNNING;\n                    this.displayGameState();\n                    break;\n                    \n                case this.gameState.RUNNING:\n                    const totalCost = (this.glasses * this.costPerGlass) + (input * this.costPerSign);\n                    if (totalCost > this.assets) {\n                        alert('You cannot afford that many signs!');\n                        this.inputElement.focus();\n                        return;\n                    }\n                    this.signs = input;\n                    this.currentState = this.gameState.RESULTS;\n                    this.displayGameState();\n                    break;\n                    \n                case this.gameState.RESULTS:\n                    console.log('Processing price input:', input);\n                    if (input <= 0) {\n                        alert('Price must be greater than 0 cents!');\n                        this.inputElement.focus();\n                        return;\n                    }\n                    this.price = input / 100;\n                    console.log('Price set to:', this.price);\n                    this.runSimulation();\n                    break;\n                    \n                // Ignore input for other states\n                case this.gameState.WIN:\n                case this.gameState.WIN_CONFIRMED:\n                case this.gameState.GAME_OVER:\n                    console.log('Ignoring input in state:', this.currentState);\n                    break;\n            }\n            \n            // Focus input field after processing\n            this.inputElement.focus();\n        };\n        \n        // Remove any existing keypress listener from the input\n        this.inputElement.removeEventListener('keypress', this.handleInputKeypress);\n        \n        // Add the new keypress listener to the input\n        this.handleInputKeypress = (e) => {\n            if (e.key === 'Enter') {\n                e.preventDefault();\n                window.submitInput();\n            }\n        };\n        this.inputElement.addEventListener('keypress', this.handleInputKeypress);\n    }\n\n    startDay() {\n        // Reset from bankruptcy if needed\n        if (this.bankruptcyDays > 0 && this.bankruptcyDays < 2) {\n            this.assets = 2.00;\n        }\n        \n        // First two days are always sunny (like the original game)\n        if (this.day <= 2) {\n            this.currentWeather = this.weather.SUNNY;\n        } else {\n            this.currentWeather = this.generateWeather();\n        }\n        \n        // Ensure we're in SETUP state when starting a new day\n        this.currentState = this.gameState.SETUP;\n        this.displayGameState();\n        \n        // Focus the input field\n        this.inputElement.value = '';\n        this.inputElement.focus();\n    }\n\n    generateWeather() {\n        const rand = Math.random();\n        let cumProb = 0;\n        for (const [weather, prob] of Object.entries(this.weatherProbabilities)) {\n            cumProb += prob;\n            if (rand < cumProb) return weather;\n        }\n        return this.weather.SUNNY;\n    }\n\n    calculateDemand(glasses, signs, price) {\n        let n1 = price < 10 ? 54 - 2.4 * price : 3000 / (price * price);\n        let r1 = this.currentWeather === this.weather.HOT_AND_DRY ? 2 : 1;\n        let signEffect = 2 - Math.exp(-0.5 * signs);\n        \n        let demand = Math.floor(r1 * n1 * signEffect);\n        return Math.min(demand, glasses);\n    }\n\n    displayGameState() {\n        let display = '';\n        \n        switch (this.currentState) {\n            case this.gameState.SETUP:\n                display = `\n*** LEMONADE STAND ***\n\nDAY ${this.day}\nASSETS: $${this.assets.toFixed(2)}\n\nWEATHER REPORT: ${this.currentWeather.replace(/_/g, ' ')}\n\nCOST OF LEMONADE: $${this.costPerGlass.toFixed(2)}/GLASS\nCOST OF SIGNS: $${this.costPerSign.toFixed(2)}/SIGN\n\nGAME PROGRESS:\nTotal Profit: $${this.totalProfit.toFixed(2)}\nBest Day: $${this.bestDayProfit.toFixed(2)}\nTotal Sales: ${this.totalGlassesSold} glasses\n\nHOW MANY GLASSES OF LEMONADE DO YOU WISH TO MAKE?`;\n                break;\n                \n            case this.gameState.RUNNING:\n                display = `\nASSETS: $${this.assets.toFixed(2)}\nGLASSES TO MAKE: ${this.glasses}\n\nHOW MANY ADVERTISING SIGNS DO YOU WANT TO MAKE?`;\n                break;\n                \n            case this.gameState.RESULTS:\n                display = `\nASSETS: $${this.assets.toFixed(2)}\nGLASSES TO MAKE: ${this.glasses}\nSIGNS TO MAKE: ${this.signs}\n\nHOW MUCH DO YOU WISH TO CHARGE FOR LEMONADE (CENTS)?`;\n                break;\n\n            case this.gameState.WIN:\n                display = `\n*** CONGRATULATIONS! ***\n\nYou've mastered the art of running a lemonade stand!\n\nFINAL STATISTICS:\n----------------\nDays in Business:   ${this.day}\nFinal Assets:       $${this.assets.toFixed(2)}\nTotal Profit:       $${this.totalProfit.toFixed(2)}\nBest Day Profit:    $${this.bestDayProfit.toFixed(2)}\nTotal Sales:        ${this.totalGlassesSold} glasses\n\n${this.assets >= 100.00 ? \"You reached $100 in assets!\" : \"You survived 30 days!\"}\n\nPress Enter to start a new game...`;\n                break;\n        }\n        \n        this.displayElement.textContent = display;\n        this.inputElement.value = '';\n        this.inputElement.focus();\n    }\n\n    runSimulation() {\n        const startingAssets = this.assets;\n        const lemonadeCost = this.glasses * this.costPerGlass;\n        const signsCost = this.signs * this.costPerSign;\n        const totalExpenses = lemonadeCost + signsCost;\n        const glassesSold = this.calculateDemand(this.glasses, this.signs, this.price);\n        const revenue = glassesSold * this.price;\n        const profit = revenue - totalExpenses;\n        const unsoldGlasses = this.glasses - glassesSold;\n        \n        // Update game statistics\n        this.totalProfit += profit;\n        this.bestDayProfit = Math.max(this.bestDayProfit, profit);\n        this.totalGlassesSold += glassesSold;\n        this.assets += profit;\n\n        let resultDisplay = `\n*** DAY ${this.day} RESULTS ***\n\nDETAILED FINANCIAL REPORT:\n------------------------\nStarting Assets:     $${startingAssets.toFixed(2)}\n\nEXPENSES:\n  Lemonade (${this.glasses} glasses @ $${this.costPerGlass.toFixed(2)}/glass):  $${lemonadeCost.toFixed(2)}\n  Signs (${this.signs} signs @ $${this.costPerSign.toFixed(2)}/sign):      $${signsCost.toFixed(2)}\n  Total Expenses:    $${totalExpenses.toFixed(2)}\n\nSALES:\n  Price per Glass:   $${this.price.toFixed(2)}\n  Glasses Made:      ${this.glasses}\n  Glasses Sold:      ${glassesSold}\n  Glasses Unsold:    ${unsoldGlasses}\n  \nREVENUE:\n  Gross Revenue:     $${revenue.toFixed(2)}\n  Net Profit:        $${profit.toFixed(2)}\n\nSUMMARY:\n  Starting Assets:   $${startingAssets.toFixed(2)}\n  Change in Assets:  ${profit >= 0 ? '+' : ''}$${profit.toFixed(2)}\n  Ending Assets:     $${this.assets.toFixed(2)}\n\nGAME STATISTICS:\n  Total Days:        ${this.day}\n  Total Profit:      $${this.totalProfit.toFixed(2)}\n  Best Day Profit:   $${this.bestDayProfit.toFixed(2)}\n  Total Glasses Sold: ${this.totalGlassesSold}\n`;\n\n        // Check win/lose conditions\n        if (this.assets <= 0) {\n            this.bankruptcyDays++;\n            if (this.bankruptcyDays >= 2) {\n                this.currentState = this.gameState.GAME_OVER;\n                resultDisplay += '\\n\\nGAME OVER! You went bankrupt twice. Final Score: $' + this.totalProfit.toFixed(2);\n                resultDisplay += '\\n\\nPress Enter to start a new game...';\n            } else {\n                resultDisplay += '\\n\\nBANKRUPTCY! But you get another chance with $2.00';\n                this.assets = 2.00;\n                this.currentState = this.gameState.GAME_OVER;\n                resultDisplay += '\\n\\nPress Enter to continue with $2.00...';\n            }\n        } else if (this.assets >= 100.00 || this.day >= 30) {\n            this.currentState = this.gameState.WIN;\n            resultDisplay = `\n*** CONGRATULATIONS! ***\n\nYou've mastered the art of running a lemonade stand!\n\nFINAL STATISTICS:\n----------------\nDays in Business:   ${this.day}\nFinal Assets:       $${this.assets.toFixed(2)}\nTotal Profit:       $${this.totalProfit.toFixed(2)}\nBest Day Profit:    $${this.bestDayProfit.toFixed(2)}\nTotal Sales:        ${this.totalGlassesSold} glasses\n\n${this.assets >= 100.00 ? \"You reached $100 in assets!\" : \"You survived 30 days!\"}\n\nPress Enter to start a new game...`;\n        } else {\n            this.currentState = this.gameState.GAME_OVER;\n            resultDisplay += '\\n\\nPress Enter to continue to Day ' + (this.day + 1);\n        }\n        \n        this.displayElement.textContent = resultDisplay;\n        this.inputElement.value = '';\n    }\n}\n\n// Export the LemonadeStand class\nwindow.LemonadeStand = LemonadeStand;\n\n// Remove the automatic initialization since we're handling it in HTML\n// window.onload = () => {\n//     window.game = new LemonadeStand();\n//     window.gameLoaded = true;\n// }; ","__webpack_require__.h = () => (\"81db278733006448f2c7\")"],"names":["LemonadeStand","_classCallCheck","assets","day","weather","SUNNY","CLOUDY","HOT_AND_DRY","currentWeather","weatherProbabilities","_defineProperty","costPerGlass","costPerSign","gameState","SETUP","RUNNING","RESULTS","GAME_OVER","WIN","WIN_CONFIRMED","currentState","displayElement","document","getElementById","inputElement","totalProfit","bestDayProfit","totalGlassesSold","bankruptcyDays","glasses","signs","price","removeEventListener","handleGlobalKeypress","setupEventListeners","startDay","_createClass","key","value","_this","e","textContent","newGame","window","game","console","log","addEventListener","submitInput","inputValue","trim","focus","input","parseInt","isNaN","alert","displayGameState","totalCost","runSimulation","handleInputKeypress","preventDefault","generateWeather","rand","Math","random","cumProb","_i","_Object$entries","Object","entries","length","_Object$entries$_i","_slicedToArray","prob","calculateDemand","n1","r1","signEffect","exp","demand","floor","min","display","concat","toFixed","replace","startingAssets","lemonadeCost","signsCost","totalExpenses","glassesSold","revenue","profit","unsoldGlasses","max","resultDisplay"],"sourceRoot":""}